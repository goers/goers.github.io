{"version":3,"file":"main.4a8ea6bb3cfa2fd08adc.bundle.js","sources":["webpack:///./app/components/Loader/BarLoader.js"],"sourcesContent":["/**\n * Goers Widget (https://widget.goersapp.com/)\n *\n * Copyright (c) 2019-present Sanraya Adi Nattaya, PT (Goers) - All Rights Reserved\n *\n * Unauthorized copying of this source codes, via any medium is strictly prohibited\n * Proprietary and confidential\n */\n\n/**\n * BarLoader\n *\n * Based on react-spinners BarLoader https://github.com/davidhu2000/react-spinners\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\nimport cx from 'classnames';\n\nimport { addOpacity as calculateBackground } from 'helpers/color';\n\nconst long = keyframes`\n  0% {left: -35%;right: 100%}\n  60% {left: 100%;right: -90%}\n  100% {left: 100%;right: -90%}\n`;\n\nconst short = keyframes`\n  0% {left: -200%;right: 100%}\n  60% {left: 107%;right: -8%}\n  100% {left: 107%;right: -8%}\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  overflow: hidden;\n  background-color: ${props => calculateBackground(props.color || props.theme.primaryColor, 0.2)};\n  background-clip: padding-box;\n`;\n\nWrapper.defaultProps = {\n  theme: {\n    primaryColor: '#0E4CEB',\n  },\n};\n\nconst Item = styled.div`\n  position: absolute;\n  height: ${props => props.height}px;\n  overflow: hidden;\n  background-color: ${props => props.color || props.theme.primaryColor};\n  background-clip: padding-box;\n  display: block;\n  border-radius: 2px;\n  will-change: left, right;\n  animation: ${props => (props.long ? long : short)} 2.1s ${props => (props.long ? '' : '1.15s')}\n    ${props => (props.long ? 'cubic-bezier(0.65, 0.815, 0.735, 0.395)' : 'cubic-bezier(0.165, 0.84, 0.44, 1)')} infinite;\n  animation-fill-mode: forwards;\n`;\n\nItem.defaultProps = {\n  theme: {\n    primaryColor: '#0E4CEB',\n  },\n};\n\nexport const BarLoader = ({ className, width, height, color, loading, ...props }) =>\n  loading && (\n    <Wrapper className={cx('___GOERS___bar-loader', className)} width={width} height={height} color={color} {...props}>\n      <Item height={height} color={color} long />\n      <Item height={height} color={color} />\n    </Wrapper>\n  );\n\nBarLoader.propTypes = {\n  /** Add additional class name to wrapper element */\n  className: PropTypes.string,\n\n  width: PropTypes.number,\n  height: PropTypes.number,\n\n  /**\n   * Override loader color.\n   * Use color string in RGB, RGBA, or HEX format.\n   * Default to theme primary color\n   */\n  color: PropTypes.string,\n\n  /** If set to false, loader will disapear */\n  loading: PropTypes.bool,\n};\n\nBarLoader.defaultProps = {\n  className: '',\n  width: 100,\n  height: 4,\n  loading: true,\n};\n\nexport default React.memo(BarLoader);\n"],"mappings":"AAsBA","sourceRoot":""}